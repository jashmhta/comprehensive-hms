version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: hms_postgres
    environment:
      POSTGRES_DB: hospital_db
      POSTGRES_USER: hms_user
      POSTGRES_PASSWORD: hms_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - hms_network

  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: hms_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: hms_admin
      MONGO_INITDB_ROOT_PASSWORD: hms_mongo_password
      MONGO_INITDB_DATABASE: hospital_docs
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - hms_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: hms_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - hms_network

  # Backend API Server
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: hms_api
    environment:
      NODE_ENV: production
      PORT: 5000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: hospital_db
      DB_USER: hms_user
      DB_PASSWORD: hms_password
      MONGODB_URI: mongodb://hms_admin:hms_mongo_password@mongodb:27017/hospital_docs
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_here
      ENCRYPTION_KEY: your_encryption_key_here
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - mongodb
      - redis
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs
    networks:
      - hms_network

  # Frontend Web Application
  web:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: hms_web
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
      REACT_APP_SOCKET_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - api
    networks:
      - hms_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: hms_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
      - api
    networks:
      - hms_network

  # Backup Service
  backup:
    build:
      context: ./backup
      dockerfile: Dockerfile
    container_name: hms_backup
    environment:
      BACKUP_SCHEDULE: "0 2 * * *"  # Daily at 2 AM
      POSTGRES_HOST: postgres
      POSTGRES_DB: hospital_db
      POSTGRES_USER: hms_user
      POSTGRES_PASSWORD: hms_password
      MONGODB_URI: mongodb://hms_admin:hms_mongo_password@mongodb:27017/hospital_docs
      AWS_ACCESS_KEY_ID: your_aws_key
      AWS_SECRET_ACCESS_KEY: your_aws_secret
      S3_BUCKET: hms-backups
    volumes:
      - ./backups:/backups
    depends_on:
      - postgres
      - mongodb
    networks:
      - hms_network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  hms_network:
    driver: bridge